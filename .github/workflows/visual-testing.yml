# .github/workflows/visual-testing.yml
name: Visual Testing

on:
  workflow_dispatch:
    inputs:
      url_group:
        description: "URL group to test"
        required: true
        type: choice
        options:
          - "adenenergies-main"
          - "adenenergies-zh"
          - "adengroup-main"
          - "adengroup-cn"
          - "test"
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      url_groups: ${{ steps.set-groups.outputs.groups }}
    steps:
      - id: set-groups
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "groups=['${{ github.event.inputs.url_group }}']" >> $GITHUB_OUTPUT
          else
            echo "groups=['adenenergies-main','adenenergies-zh','adengroup-main','adengroup-cn','test']" >> $GITHUB_OUTPUT
          fi

  test:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        url_group: ${{fromJson(needs.prepare.outputs.url_groups)}}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests for ${{ matrix.url_group }}
        run: node run-tests-ci.js ${{ matrix.url_group }}

      - name: Generate report
        run: node generate-report.js

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.url_group }}
          path: |
            test-results/
            playwright-report/
            screenshots/
          retention-days: 30

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Create directories
        run: |
          mkdir -p artifacts
          mkdir -p public
          mkdir -p public/screenshots

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: test-results-*
          path: /
          merge-multiple: true

      - name: Process artifacts
        run: |
          # Copy playwright reports to public
          cp -r artifacts/playwright-report/* public/ || true

          # Copy screenshots to public/screenshots
          cp -r /screenshots/* public/screenshots/ || true

          # Copy test results if needed
          cp -r test-results/ public/test-results || true

      - name: Generate combined report
        run: |
          echo "Current directory structure:"
          ls -R

          echo "Generating report..."
          node generate-report.js || true  # Continue even if report generation fails

      - name: List directories
        run: |
          echo "Public directory content:"
          ls -R public/

          echo "Artifacts directory content:"
          ls -R /

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          enable_jekyll: false
          force_orphan: true
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "Deploy to GitHub Pages [skip ci]"
